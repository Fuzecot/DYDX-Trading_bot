from dydx3.constants import API_HOST_GOERLI, API_HOST_MAINNET
from decouple import config

# !!! SELECT MODE !!!
MODE = "DEVELOPMENT"

# close all positions and Orders
ABORT_ALL_POSITONS = True

# find cointegrated Pairs
FIND_COINTEGRATED = True

# manage existing trades
MANAGE_EXITS = True

# place trades
PLACE_TRADES = True

# Resolution
RESOLUTION = "1HOUR"

# Stats window
WINDOW = 21

# Thresholds - Opening
MAX_HALF_LIFE = 24
ZSCORE_THRESH = 1.5
USD_PER_TRADE = 100
USD_MIN_COLLATERAL = 1880

# Thresholds - Closing
CLOSE_AT_ZSCORE_CROSS = True

# Ethereum Address
ETHEREUM_ADDRESS = "0xAeA4e1270aC4b6F863CA3fF68FddCb62ca5b5e05"

# KEYS - Prduction
# Must to be on Mainnet on DYDX
STARK_PRIVATE_KEY_MAINNET = config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNNET = config("DYDX_API_KEY_MAINNNET")
DYDX_API_SECRET_MAINNNET = config("DYDX_API_SECRET_MAINNNET")
DYDX_API_PASSPHRASE_MAINNNET = config("DYDX_API_PASSPHRASE_MAINNNET")

# KEYS - Development
# Must to be on Testnet on DYDX
STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")

# KEYS - Export
STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET if MODE == "PRODUCTION" else STARK_PRIVATE_KEY_TESTNET
DYDX_API_KEY = DYDX_API_KEY_MAINNNET if MODE == "PRODUCTION" else DYDX_API_KEY_TESTNET
DYDX_API_SECRET = DYDX_API_SECRET_MAINNNET if MODE == "PRODUCTION" else DYDX_API_SECRET_TESTNET
DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_MAINNNET if MODE == "PRODUCTION" else DYDX_API_PASSPHRASE_TESTNET

# HOST - Export
HOST = API_HOST_MAINNET if MODE == "PRODUCTION" else API_HOST_GOERLI

# HTTP PROVIDER
HTTP_PROVIDER_MAINNET = "https://eth-mainnet.g.alchemy.com/v2/Lm1Z6-i854tKvB3KL75gchg5rfd_KE6d"
HTTP_PROVIDER_TESTNET = "https://eth-goerli.g.alchemy.com/v2/U3YQNRsL1YQsvImpf_XkKL5t99Gv9Sr5"
HTTP_PROVIDER = HTTP_PROVIDER_MAINNET if MODE == "PRODUCTION" else HTTP_PROVIDER_TESTNET